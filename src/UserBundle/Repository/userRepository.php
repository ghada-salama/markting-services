<?php

namespace UserBundle\Repository;

/**
 * userRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class userRepository extends \Doctrine\ORM\EntityRepository {



            //migration 
            public function getCount()
            { 
                return $this->createQueryBuilder('c')->select('count(c.id)')
                              //->setMaxResults(5)
                              //->setFirstResult(11110)
                              ->where('c.flag is Null')
                              //->andWhere('c.WYear = 2010')
                              ->getQuery()
                              
                              ->getSingleScalarResult();
            }
        
            public function getFirst()
            { 
                return $this->createQueryBuilder('c')
                            ->where('c.flag is NULL')
                            //->andWhere('c.WYear = 2010')
                           ->setMaxResults(1)
                           ->getQuery()
                          ->getOneOrNullResult();
            }
        
     
        //end migration

  

    public function getByCommite($commite, $orderBy = false, $sort = 'ASC') {
        $query = $this->createQueryBuilder('u');
        $query->where('u.commite = :commite');
        $query->setParameter('commite', $commite->getId());
        if ($orderBy) {
            $query->orderBy('u.' . $orderBy, $sort);
        }
        return $query->getQuery();

        
    }
    
    public function findByName($username) {
        $query = $this->createQueryBuilder('u');
        $query->where('u.username = :username');
        $query->setParameter('username', $username);
        return $query->getQuery();
    }



    public function allUsers()
     {
        $query = $this->createQueryBuilder('u');
        $query->where('u.enabled = 1');      
        return $query->getQuery();
        //return   $query->getResult();
    }

    public function findByEmail($email) {
        $query = $this->createQueryBuilder('u');
        $query->where('u.email = :email');
        $query->setParameter('email', $email);
        $query = $query->getQuery();
        return  $query->getOneOrNullResult();
    }

    public function findByUserName($username) {
        $query = $this->createQueryBuilder('u');
        $query->where('u.username = :username');
        $query->setParameter('username', $username);
        $query = $query->getQuery();
        return  $query->getOneOrNullResult();
    }
    public function findUser($userID)
    {
        return $this->createQueryBuilder('c')
                       
                                 ->where('c.id = :id')
                                 ->setParameter('id',$userID)
                                //->setMaxResults(1)
                                ->getQuery()
                                ->getOneOrNullResult();
    }
    

}
